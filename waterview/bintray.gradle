bintray {
    user = project.hasProperty('bintrayUser')
    key = project.hasProperty('bintrayApiKey')

    configurations = ['deployables'] //When uploading configuration files
//     - OR -
//    publications = ['mavenStuff'] //When uploading Maven-based publication files
//    // - AND/OR -
//    filesSpec { //When uploading any arbitrary files ('filesSpec' is a standard Gradle CopySpec)
//        from 'arbitrary-files'
//        into 'standalone_files/level1'
//        rename '(.+)\\.(.+)', '$1-suffix.$2'
//    }
    dryRun = false //[Default: false] Whether to run this as dry-run, without deploying
    publish = true //[Default: false] Whether version should be auto published after an upload
    override = false //[Default: false] Whether to override version artifacts already published
    //Package configuration. The plugin will use the repo and name properties to check if the package already exists. In that case, there's no need to configure the other package properties (like userOrg, desc, etc).
    pkg {
        repo = 'maven'
        name = 'waterview'
//        userOrg = 'myorg' //An optional organization name when the repo belongs to one of the user's orgs
        desc = 'what a fantastic package indeed!'
        websiteUrl = 'https://github.com/wodx521/WaterViewSamples'
//        issueTrackerUrl = 'https://github.com/bintray/gradle-bintray-plugin/issues'
        vcsUrl = 'https://github.com/wodx521/WaterViewSamples.git'
        licenses = ['Apache-2.0']
        labels = ['gear', 'gore', 'gorilla']
        publicDownloadNumbers = true
        attributes = ['a': ['ay1', 'ay2'], 'b': ['bee'], c: 'cee']
        //Optional package-level attributes

        githubRepo = 'wodx521/WaterViewSamples' //Optional Github repository
        githubReleaseNotesFile = 'README.md' //Optional Github readme file

//        //Optional Debian details
//        debian {
//            distribution = 'squeeze'
//            component = 'main'
//            architecture = 'i386,noarch,amd64'
//        }
        //Optional version descriptor
//        version {
//            name = '1.3-Final' //Bintray logical version name
//            desc = //Optional - Version-specific description'
//                    released = //Optional - Date of the version release. 2 possible values: date in the format of 'yyyy-MM-dd'T'HH:mm:ss.SSSZZ' OR a java.util.Date instance
//                            vcsTag = '1.3.0'
//            attributes = ['gradle-plugin': 'com.use.less:com.use.less.gradle:gradle-useless-plugin']
//            //Optional version-level attributes
//            //Optional configuration for GPG signing
//            gpg {
//                sign = true //Determines whether to GPG sign the files. The default is false
//                passphrase = 'passphrase' //Optional. The passphrase for GPG signing'
//            }
//            //Optional configuration for Maven Central sync of the version
//            mavenCentralSync {
//                sync = true
//                //[Default: true] Determines whether to sync the version to Maven Central.
//                user = 'userToken' //OSS user token: mandatory
//                password = 'paasword' //OSS user password: mandatory
//                close = '1'
//                //Optional property. By default the staging repository is closed and artifacts are released to Maven Central. You can optionally turn this behaviour off (by puting 0 as value) and release the version manually.
//            }
//        }
    }
}